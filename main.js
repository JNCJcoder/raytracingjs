(()=>{var t={265:(t,e,s)=>{s(413),t.exports=class{constructor(t,e,s,n){this.surfaceColor=t,this.emissionColor=n,this.transparency=s,this.reflection=e}intersect(t,e,s){return!1}getMaterial(){return{surfaceColor:this.surfaceColor,emissionColor:this.emissionColor,transparency:this.transparency,reflection:this.reflection}}}},335:(t,e,s)=>{s(413);const n=s(265);t.exports=class extends n{constructor(t,e,s,n,r,i){super(s,n,r,i),this.center=t,this.radius=e,this.radius2=e*e}intersect(t,e,s){const n=t.clone().subtract(this.center),r=e.dot(e),i=2*e.dot(n),o=n.dot(n)-this.radius2;return!!this.solveQuadratic(r,i,o,s)&&(s.t0>s.t1&&([s.t0,s.t1]=[s.t1,s.t0]),s.t0<0&&(s.t0=s.t1),s.t0>=0)}solveQuadratic(t,e,s,n){const r=e*e-4*t*s;if(r<0)return!1;if(0==r)n.t0=-.5*e/t,n.t1=n.t0;else{const i=e>0?-.5*(e+Math.sqrt(r)):-.5*(e-Math.sqrt(r));n.t0=i/t,n.t1=s/i}return!0}getNormal(t){const e=t.clone().subtract(this.center);return e.normalize(),e}}},413:t=>{class e{constructor(t=0,e=0,s=0){this.x=t,this.y=e,this.z=s}set(t,e,s){return this.x=t||this.x,this.y=e||this.y,this.z=s||this.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}subtract(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}multiply(t){return this.x*=t,this.y*=t,this.z*=t,this}clone(){return new e(this.x,this.y,this.z)}lengthSquare(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){const t=this.lengthSquare();return Math.sqrt(t)}normalize(){const t=this.lengthSquare();if(t>0){const e=1/Math.sqrt(t);this.x*=e,this.y*=e,this.z*=e}return this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}product(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}negativeSign(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}}t.exports=e}},e={};function s(n){var r=e[n];if(void 0!==r)return r.exports;var i=e[n]={exports:{}};return t[n](i,i.exports,s),i.exports}(()=>{const t=s(413),e=s(335),n=document.getElementById("canvas"),r=n.getContext("2d"),i=n.width||640,o=n.height||480,a=1/i,h=1/o,c=i/o,l=Math.tan(.5*Math.PI*40/180),u=1e8,y=1e-4;let d=[];const w=new t(2,2,2);function p(e,s,n){let r=u,i=null,o={t0:u,t1:u};for(const t of d)o.t0=u,o.t1=u,t.intersect(e,s,o)&&(o.t0<0&&(o.t0=o.t1),o.t0<r&&(r=o.t0,i=t));if(null==i)return w;const a=new t(0,0,0),h=e.clone().add(s.clone().multiply(r)),c=i.getNormal(h);let l=!1;s.dot(c)>0&&(c.negativeSign(),l=!0);const x=i.getMaterial();if((x.transparency>0||x.reflection>0)&&n<2){const e=s.dot(c),r=-e,i=1*.1+.9*Math.pow(1-r,3),o=s.clone().subtract(c.clone().multiply(2).multiply(e)).normalize(),u=p(c.clone().multiply(y).add(h),o,n+1);let d=new t(0,0,0);if(x.transparency){const e=1.1,r=l?e:1/e,i=-c.dot(s),a=1-r*r*(1-i*i),u=new t(0,0,0);o.set(s.x*r+c.x*(r*i-Math.sqrt(a)),s.y*r+c.y*(r*i-Math.sqrt(a)),s.z*r+c.z*(r*i-Math.sqrt(a))),u.normalize(),d=p(c.clone().multiply(y).subtract(h),u,n+1)}return a.set((u.x*i+d.x*(1-i)*x.transparency)*x.surfaceColor.x,(u.y*i+d.y*(1-i)*x.transparency)*x.surfaceColor.y,(u.z*i+d.z*(1-i)*x.transparency)*x.surfaceColor.z),a.add(x.emissionColor),a}for(const e of d){const s=e.getMaterial();if(s.emissionColor.x>0||s.emissionColor.y>0||s.emissionColor.z>0){const n=new t(1,1,1),r=e.center.clone().subtract(h);r.normalize();const i={t0:u,t1:u};for(const t of d)if(e!=t&&t.intersect(h.clone().add(c.clone().multiply(y)),r,i)){n.set(0,0,0);break}const o=Math.max(0,c.dot(r));a.add(x.surfaceColor.clone().product(n).product(s.emissionColor.clone().multiply(o)))}}return a.add(x.emissionColor),a}!function(){d.push(new e(new t(0,-10004,-20),1e4,new t(.2,.2,.2),0,0,new t(0,0,0))),d.push(new e(new t(-1,0,-60),4,new t(2,.3,.34),1,.9,new t(0,0,0))),d.push(new e(new t(5,-1,-15),2,new t(.9,.76,.46),1,0,new t(0,0,0))),d.push(new e(new t(5,0,-35),3,new t(.65,.77,.97),1,0,new t(0,0,0))),d.push(new e(new t(-5.5,0,-25),3,new t(1.4,0,2.55),1,0,new t(0,0,0))),d.push(new e(new t(0,20,-30),3,new t(0,0,0),0,0,new t(3,3,3)));const s=function(){const e=new ArrayBuffer(i*o*4),s=new Uint32Array(e),n=new t(0,0,0);let r=0;for(let e=0;e<o;e++)for(let o=0;o<i;o++,r++){const i=new t(((o+.5)*a*2-1)*l*c,(1-(e+.5)*h*2)*l,-1);i.normalize();const u=p(n,i,0),y=Math.round(255*Math.min(1,u.x)),d=Math.round(255*Math.min(1,u.y))<<8,w=Math.round(255*Math.min(1,u.z))<<16;s[r]=-16777216|w|d|y}return new Uint8ClampedArray(e)}(),n=r.getImageData(0,0,i,o);n.data.set(s),r.putImageData(n,0,0)}()})()})();